actdat <- read.csv(unz("activity.zip", "activity.csv"))
#loaded dplyr library
library(dplyr)
#What is mean total number of steps taken per day?
#calculate the total number of steps per day
totstepsd <- actdat %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))
#Make a histogram of the total number of steps taken each day
ggplot(totstepsd, aes(x = total)) + geom_histogram()
library(ggplot2)
ggplot(totstepsd, aes(x = total)) + geom_histogram()
View(totstepsd)
View(actdat)
ggplot(totstepsd, aes(x = total)) + geom_histogram(aes(y=..density..)
)
ggplot(totstepsd, aes(x = total)) + geom_histogram()
ggplot(totstepsd, aes(x = total)) + geom_histogram() + geom_freqpoly()
ggplot(totstepsd, aes(x = total)) + geom_histogram()
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 30)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 20)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 10)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 5)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 50)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 100)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 200)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 200)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 300)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 400)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 500)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 1000)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600)
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous()
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous(breaks = c(0, 2500, 5000, 7500, 10000, 12500, 15000, 17500, 20000, 22500, 25000))
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous(breaks = round(seq(min(totstepsd$total), max(totstepsd$total), by = 2500),1))
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous(breaks = seq(0:25000, by 2500))
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous(breaks = seq(0:25000, by = 2500))
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
ggsave(filename = "hist1.png")
meansteps_day <- mean(totstepsd$total)
medsteps_day <- median(totstepsd$total)
avg5int <- actdat %>% na.omit() %>% group_by(interval) %>% summarise(avg = mean(steps))
View(avg5int)
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line()
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2355, by = 50))
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2355, by = 100))
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100))
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + x_lab("5 minute intervals") + y_lab("Average steps per day")
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab("5 minute intervals") + ylab("Average steps per day")
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab("5 minute intervals") + ylab("Average steps per day") + title("Average Steps Per 5 Minute Interval")
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab("5 minute intervals") + ylab("Average steps per day") + ggtitle("Average Steps Per 5 Minute Interval")
ggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab("5 minute intervals") + ylab("Average steps per day") + ggtitle("Average Steps Per Day Per 5 Minute Interval")
ggsave(filename = "time1.png")
maxsteps <- avg5int %>% filter(interval == max(avg))
View(maxsteps)
maxsteps <- avg5int %>% filter(avg == max(avg))
tally(actdat,NA)
tally(actdat$steps, NA)
tally(actdat$steps, "NA")
tally(actdat$steps)
str(actdat)
count(actdat)
count(actdat$steps)
table(actdat$steps)
sum(actdat$steps == "NA")
sum(actdat$steps == NA)
sum(actdat$steps = NA)
sum(actdat$steps == NA)
summarise(actdat$steps, countna = n("NA"))
summarise(actdat$steps, countna = n(NA))
actdat %>% group_by(steps) %>% summarise(num = n())
countna <- actdat %>% group_by(steps) %>% summarise(num = n())
countna
View(countna)
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(steps = NA)
countna
View(countna)
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(steps == NA)
View(countna)
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(steps == "NA")
View(countna)
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(steps = NA)
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(is.na())
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(steps == is.na())
countna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(is.na(steps))
library(mice)
install.packages("mice")
library(mice)
tempdata <- mice(actdat)
tempdata
tempdata$steps
tempdata$data
impdata <- tempdata$data
impdata
View(impdata)
rm(impdata)
impdata <- complete(tempdata)
impdata
View(impdata)
hist(impdata)
hist(impdata$steps)
hist(actdata$steps)
hist(actdat$steps)
hist(actdat$steps)
hist(impdata$steps)
hist(actdat$steps)
totstepsd_imp <- impdata %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))
#Make a histogram of the total number of steps taken each day
ggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
impdata2 <- actdata %>% group_by(date) %>% mutate(profit= replace(steps, is.na(steps), mean(steps, na.rm=TRUE)))
impdata2 <- actdat %>% group_by(date) %>% mutate(profit= replace(steps, is.na(steps), mean(steps, na.rm=TRUE)))
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps, na.rm=TRUE)))
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps, na.rm=FALSE)))
View(impdata2)
View(actdat)
?replace
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, NA, mean(steps)))
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(actdat$steps), mean(steps)))
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(as.numeric(steps)))
)
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps))
)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata)
View(impdata2)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(steps, na.rm = T), steps))
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(steps), steps))
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(ad.numeric(steps), steps))
)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(as.numeric(steps), steps)))
str(actdata)
str(actdat)
impdata3 <- as.numeric(impdata2$steps)
str(impdata3)
impdata3 <- impdata2
impdata3$steps <- as.numeric(impdata3$steps)
View(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata3)
str(impdata3)
impdata3$interval <- as.numeric(impdata3$interval
)
View(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata3)
?replace
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, steps == NA, mean(steps)))
View(impdata3)
View(impdata3)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(steps), steps))
impdata3$interval <- as.integer(impdata3$interval)
impdata3$steps <- as.integer(impdata3$steps)
impdata2 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(steps), steps))
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(is.na(steps), mean(steps), steps))
str(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(NA, mean(steps), steps))
View(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(steps == NA, mean(steps), steps))
View(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = ifelse(steps == NA, mean(steps, na.rm = FALSE), steps))
View(impdata3)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps)))
View(impdata3)
impdata3 <- actdat %>% group_by(date)
View(impdata3)
class(impdata3)
temp_mutate <- mutate(impdata3, steps = replace(steps, is.na(steps), mean(steps)))
View(temp_mutate)
?transform
impdata3
temp_mutate <- mice(impdata3)
temp_complete <- complete(temp_mutate)
View(temp_complete)
rm(temp_complete)
rm(temp_mutate)
impdata3 <- actdat %>% group_by(date) %>% mutate(steps = replace(steps, is.na(steps), mean(steps, rm.na = TRUE)))
View(impdata3)
View(actdat)
impdata3 <- actdat %>% group_by(interval) %>% mutate(steps = ifelse(steps == NA, mean(steps, na.rm = TRUE), steps))
View(impdata3)
impdata3 <- actdat %>% group_by(interval) %>% mutate(steps = ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps))
View(impdata3)
impactdat <- actdat %>% group_by(interval) %>% mutate(steps = ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps))
rm(impdata)
rm(impdata2)
rm(impdata3)
#calculate the total number of steps per day
totstepsd_imp <- impactdat %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))
#Make a histogram of the total number of steps taken each day
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
#calculate the total number of steps per day
totstepsd_imp <- impactdat %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))
#Make a histogram of the total number of steps taken each day
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
View(totstepsd_imp)
View(totstepsd)
View(impactdat)
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(aes(x = totstepsd))
totstepsd_na <- actdat %>% group_by(date) %>% summarise(total = sum(steps))
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(aes(x = totstepsd_na))
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(aes(totstepsd_na))
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(totstepsd_na)
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(aes(totstepsd_na$total)
)
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_line(aes(totstepsd_na$date, totstepsd_na$total)
)
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + geom_abline()
ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))
impplot1
impplot2
impplot1
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0:20)
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,20)
impplot2
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,20)
impplot1
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15)
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15)
impplot1
impplot2
impplot1
impplot2
multiplot(impplot1, impplot2)
library(Rmisc)
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle("Total number of steps per day without data imputation")
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle("Total number of steps per day with data imputation")
impplot1
impplot2
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle("Total number of steps per day with data imputation")
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,20) + ggtitle("Total number of steps per day without data imputation")
impplot2
impplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle("Total number of steps per day with data imputation")
impplot1
multiplot(impplot1,impplot2)
impplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle("Total number of steps per day without data imputation")
multiplot(impplot1,impplot2)
ggsave(filename = "hist2.png")
multiplot(impplot1,impplot2)
ggsave(filename = "hist2.png")
hist2 <- multiplot(impplot1,impplot2)
ggsave(filename = "hist2.png")
?png
png(filename = "hist2.png")
multiplot(impplot1,impplot2)
dev.off()
meansteps_day_imp <- mean(totstepsd_imp$total)
medsteps_day_imp <- median(totstepsd_imp$total)
actdat1 <- actdat
weekdays(actdat1$date)
weekdays(as.Date(actdat1$date)
)
actdat1 <- actdat %>% bind_cols(weekdays(as.Date(actdat$date)))
actdat1$weekday <- weekday(as.Date(actdat$date))
actdat1$weekday <- weekdays(as.Date(actdat$date))
View(actdat1)
install.packages("timeDate")
library(timeDate)
?"timeDate"
?isWeekday
isWeekday(act\)
isWeekday(actdat1$weekday)
isWeekday(as.Date(actdat1$weekday)
)
isWeekday(as.Date(actdat1$date)
)
actdat1$wkday <- isWeekday(actdat1$date)
View(actdat1)
actdat1$wkday <- ?replace
View(actdat1)
actdat1$wkday <- isWeekday(actdat1$date)
?replace
View(actdat1)
actdat1$weekday <- replace(actdat1$wkday, TRUE, "weekday")
View(actdat1)
actdat1$weekday <- weekdays(as.Date(actdat$date))
View(actdat1)
actdat1$weekday <- replace(actdat1$wkday, wkday == TRUE, "weekday")
actdat1$weekday <- replace(actdat1, wkday == TRUE, "weekday")
actdat1 <- mutate(wkdayend = replace(actdat1, wkday == TRUE, "weekday"))
actdat1 <- mutate(wkdayend = replace(actdat1, wkday == TRUE, "weekday")) %>% as.data.frame()
actdat1 <- mutate(actday1, wkdayend = replace(actdat1, wkday == TRUE, "weekday"))
actdat1 <- mutate(actdat1, wkdayend = replace(actdat1, wkday == TRUE, "weekday"))
View(actdat1)
actdat1 <- actdat1 %>% mutate( wkdayend = replace(wkday == TRUE, "weekday"))
actdat1 <- actdat1 %>% mutate( wkdayend = replace(wkday = TRUE, "weekday"))
actdat1 <- actdat1 %>% mutate( wkdayend = replace(wkday == TRUE, "weekday"))
actdat1 <- actdat1 %>% mutate(wkdayend = replace(wkday == TRUE, "weekday"))
actdat1 <- actdat1 %>% mutate(wkdayend = replace(wkday, wkday == TRUE, "weekday"))
View(actdat1)
actdat1 <- actdat1 %>% mutate(wkdayend = replace(wkday, wkday == FALSE, "weekend"))
View(actdat1)
actdat1 <- actdat1 %>% mutate(wkdayend = replace(wkdayend, wkdayend == TRUE, "weekday"))
View(actdat1)
?qplot
avg5intwkday <- actdat1 %>% na.omit() %>% filter(wkdayend == "weekday" %>% group_by(interval) %>% summarise(avg = mean(steps))
)
avg5intwkday <- actdat1 %>% na.omit() %>% filter(wkdayend == "weekday") %>% group_by(interval) %>% summarise(avg = mean(steps))
View(avg5intwkday)
avg5intwkday <- actdat1 %>% na.omit() %>% filter(wkdayend == "weekday") %>% group_by(interval)
class(avg5intwkday
)
summarise(avg5intwkday, avg = mean(steps))
str(actdat1)
group_by(actdat1, interval)
avg5intwkday <- actdat1 %>% filter(wkdayend == "weekday") %>% group_by(interval)
View(avg5intwkday)
avg5intwkday <- filter(actdat1, wkdayend == "weekday")
avg5intwkday <- group_by(avg5intwkday, interval)
View(avg5intwkday)
avg5intwkday <- group_by(avg5intwkday, as.numeric(interval)
)
library(dplyr)
View(actdat1)
avg5intwkday <- actdat1 %>% ungroup() %>% group_by(interval) %>% filter(wkdayend == "weekday")
View(avg5intwkday)
avg5intwkday <- actdat1 %>% ungroup()
View(avg5intwkday)
avg5intwkday <- actdat1 %>% group_by(interval)
View(avg5int)
View(avg5intwkday)
class(avg5intwkday)
avg5intwkday <- actdat1 %>% ungroup()
class(avg5intwkday)
View(avg5intwkday)
avg5intwkday <- actdat1 %>% group_by(interval)
class(avg5intwkday)
View(avg5int)
View(avg5intwkday)
avg5intwkday %>% summarise(mean(steps))
avg5intwkday %>% summarise(avg = mean(steps))
save.image("C:/Users/mcmillin/datasciencecoursera/RepData_PeerAssessment1/global_variables.RData")
