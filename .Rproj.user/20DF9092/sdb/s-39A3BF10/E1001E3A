{
    "collab_server" : "",
    "contents" : "---\ntitle: 'Reproducible Research: Peer Assessment 1'\noutput:\n  html_document:\n    keep_md: yes\n  pdf_document: default\n---\n\n\necho=FALSE\n\n\n\nThe following libraries will need to be loaded to execute the following code.\n```{r, echo=TRUE}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(timeDate)\nlibrary(gridExtra)\n```\n\n## Loading and preprocessing the data\n\nThe following code unzips the \"activity.zip\" file and reads the contents into a variable \"actdat\" with read.csv.\n````{r, echo = TRUE}\nactdat <- read.csv(unz(\"activity.zip\", \"activity.csv\"))\n````\n\n\n## What is mean total number of steps taken per day?\n\nThis code calculates the total number of steps per day and assigns it to the totstepd variable.\n````{r, echo = TRUE}\ntotstepsd <- actdat %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))\n````\n\nThe following code creates a histogram of the total number of steps taken each day using the ggplot2 package.\n\n````{r, echo = TRUE}\nggplot(totstepsd, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500))\n````\n\nThe following code ouputs the histogram to a png file called \"hist1.png\"\n````{r, echo = TRUE}\nggsave(filename = \"hist1.png\")\n````\nThe following code calculates the mean and median number of steps taken per day and prints the results for both.\n````{r, echo = TRUE}\nmeansteps_day <- mean(totstepsd$total)\nmedsteps_day <- median(totstepsd$total)\nprint(meansteps_day)\nprint(medsteps_day)\n````\nThe results of the output are as follows:\n*Median steps per day = 10765\n*Mean steps per day = 10766.19\n\n## What is the average daily activity pattern?\n\nGroup actdat by interval and summarise the average number of steps per interval across all days.\n\n````{r, echo = TRUE}\n\navg5int <- actdat %>% na.omit() %>% group_by(interval) %>% summarise(avg = mean(steps))\n````\n\nPlot the time series graph with ggplot2 and save it as \"time.png\"\n````{r,echo = TRUE}\nggplot(data = avg5int, mapping = aes(x = interval, y = avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab(\"5 minute intervals\") + ylab(\"Average steps per day\") + ggtitle(\"Average Steps Per Day Per 5 Minute Interval\")\n\nggsave(filename = \"time1.png\")\n````\n\nThis code determines which 5 minute interval contains the maximum number of steps and prints the results.\n\n````{r, echo = TRUE}\nmaxsteps <- avg5int %>% filter(avg == max(avg))\nprint(maxsteps)\n````\n\nRESULTS: The maximum numbers of steps were 206 and it occurred in the 835 interval.\n\nThe following code calculates and prints the number of NA fields.\n\n````{r, echo = TRUE}\ncountna <- actdat %>% group_by(steps) %>% summarise(num = n()) %>% filter(is.na(steps))\nprint(countna)\n````\nRESULTS:  There were 2304 NA fields.\n\nThe following code imputes the NA fields with the mean of steps for each grouped interval.\n````{r, echo = TRUE}\nimpactdat <- actdat %>% group_by(interval) %>% mutate(steps = ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps))\n````\n\nThe following code calculates the number of steps per day and saves it to variable totstepsd_imp.\n````{r, echo = TRUE}\ntotstepsd_imp <- impactdat %>% na.omit() %>% group_by(date) %>% summarise(total = sum(steps))\ntotstepsd_na <- actdat %>% group_by(date) %>% summarise(total = sum(steps))\n````\n\nThe following code prints the two graphs using ggplot2 and multiplot.\n\n````{r, echo = TRUE}\n\nimpplot2 <- ggplot(totstepsd_na, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle(\"Total number of steps per day without data imputation\")\n\nimpplot1 <- ggplot(totstepsd_imp, aes(x = total)) + geom_histogram(binwidth = 600, aes(fill = ..count..)) + scale_x_continuous(breaks = seq(0,25000, by = 2500)) + ylim(0,15) + ggtitle(\"Total number of steps per day with data imputation\")\n\ngrid.arrange(impplot1, impplot2)\n\npng(filename = \"hist2.png\")\n\ngrid.arrange(impplot1,impplot2)\n\ndev.off()\n\n##Detaching this module as it seems to mess up dplyr on my machine.\n\n````\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nThis code creates a new column in actdat called Weekday that describes the day of the week.\n````{r, echo = TRUE}\nactdat1 <- actdat\nactdat1$weekday <- weekdays(as.Date(actdat$date))\n````\n\nThis code determines if a date is weekday or weekend and save it to the new wkday column.\n````{r, echo = TRUE}\nactdat1$wkday <- isWeekday(actdat1$date)\n````\n\nThis code renames the variables in wkday: True to \"weekday\" and False to \"weekend\"\n\n````{r, echo = TRUE}\nactdat1 <- actdat1 %>% mutate(wkdayend = replace(wkday, wkday == FALSE, \"weekend\"))\nactdat1 <- actdat1 %>% mutate(wkdayend = replace(wkdayend, wkdayend == TRUE, \"weekday\"))\n\navg5intwkday <- actdat1 %>% select(c(steps, interval, wkdayend)) %>% group_by(interval)\n````\n\nThis code determines the averages for the weekdays and the weekend days and saves them to new variables.\n````{r, echo = TRUE}\nwkdayavg_steps <- avg5intwkday %>% ungroup() %>% na.omit() %>% filter(wkdayend == \"weekday\") %>% select(c(steps, interval, wkdayend)) %>% group_by(interval) %>% summarize(avg = mean(steps))\n\nwkendavg_steps <- avg5intwkday %>% ungroup() %>% na.omit() %>% filter(wkdayend == \"weekend\") %>% select(c(steps, interval, wkdayend)) %>% group_by(interval) %>% summarize(avg = mean(steps))\n````\n\nThis code creates the two plots using ggplot2 and prints it to timeplot3.png and to the screen.\n\n````{r, echo = TRUE}\n\nweekdayplot <- ggplot(wkdayavg_steps,aes(interval, avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab(\"5 minute intervals\") + ylab(\"Average steps per day\") + ggtitle(\"Average Steps Per Day Per 5 Minute Interval (Weekday)\")\n\nweekendplot <- ggplot(wkendavg_steps,aes(interval, avg)) + geom_line() + scale_x_continuous(breaks = seq(0, 2400, by = 100)) + xlab(\"5 minute intervals\") + ylab(\"Average steps per day\") + ggtitle(\"Average Steps Per Day Per 5 Minute Interval (Weekend)\")\n\ngrid.arrange(weekdayplot,weekendplot)\npng(filename = \"timeplot3.png\")\ngrid.arrange(weekdayplot,weekendplot)\ndev.off()\n\n\n\n\n\n\n",
    "created" : 1457897937016.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1840874861",
    "id" : "E1001E3A",
    "lastKnownWriteTime" : 1457909283,
    "last_content_update" : 1457909283761,
    "path" : "C:/Users/mcmillin/datasciencecoursera/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}